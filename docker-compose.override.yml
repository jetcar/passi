version: '3.4'

services:
  redis:
    ports:
      - "6379:6379"
    networks:
    - haproxy_net


  database:
    logging:
      driver: json-file
    ports:
      - "5432:5432"
    networks:
      - haproxy_net
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - type: bind
        source: ../db-data/
        target: /var/lib/postgresql/data/
    
  pgadmin:
    networks:
      - haproxy_net
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ./configs/pgadmin/:/etc/pgadmin/:ro #config
      - ../pgadmin/:/var/lib/pgadmin/:rw
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip

  haproxy:
    networks:
      - haproxy_net
    volumes:
      - ./configs/cert:/usr/local/etc/haproxy/cert
      - ./configs/haproxy:/usr/local/etc/haproxy
      
  webapp:
    networks:
      - haproxy_net
    build:
      context: .
      dockerfile: WebApp/Dockerfile
    ports:
      - "5002:5002"
    env_file:
      - ./configs/variables/dev.env
      - ../passi_config/sendgrid.env
    volumes:
      - ../creds:/home/creds
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip

  identityserver:
    networks:
      - haproxy_net
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile
    ports:
      - "5003:5003"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ./configs/identity:/myapp/cert
      - ../creds:/home/creds
    # depends_on:
    #   - common_image
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip

  openidc:
    networks:
      - haproxy_net
    build:
      context: .
      dockerfile: OpenIDC/Dockerfile
    ports:
      - "5005:5005"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ./configs/identity:/myapp/cert
      - ../creds:/home/creds
    # depends_on:
    #   - common_image
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip

  passiwebapi:
    networks:
      - haproxy_net
    build:
      context: .
      dockerfile: passiwebapi/Dockerfile
    ports:
      - "5004:5004"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ../creds:/home/creds
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip

  front:
    logging:
      driver: json-file
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip

  resolver:
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip

  admin:
    logging:
      driver: json-file
    ports:
      - "8080:8080"
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip

  

  oletools:
    logging:
      driver: json-file
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip

  antispam:
    logging:
      driver: json-file
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip

  webmail:
    env_file:
      - ./configs/variables/dev.env
    deploy:
      mode: replicated
      endpoint_mode: vip


  ddclient:
    deploy:
      mode: replicated
      replicas: 0
      endpoint_mode: vip


  wireguard:
    deploy:
      mode: replicated
      replicas: 0
      endpoint_mode: vip


