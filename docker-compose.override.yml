version: '3.4'

services:
  database:
    ports:
      - "5432:5432"
    networks:
      - haproxy_net
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - type: bind
        source: ../db-data/
        target: /var/lib/postgresql/data/
    
  pgadmin:
    networks:
      - haproxy_net
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ./configs/pgadmin/:/etc/pgadmin/:ro #config
      - ../pgadmin/:/var/lib/pgadmin/:rw

  haproxy:
    networks:
      - haproxy_net
    volumes:
      - ./configs/cert:/usr/local/etc/haproxy/cert
      - ./configs/haproxy:/usr/local/etc/haproxy

  common_image:
    build:
      tags: 
        - common_image:latest
      context: .
      dockerfile: DockerfileBuildAll

  webapp:
    networks:
      - haproxy_net
    build:
      tags: 
        - webapp:1.0.7
      context: .
      dockerfile: WebApp/Dockerfile
    ports:
      - "5002:5002"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ../creds:/home/creds
    depends_on:
      - common_image


  identityserver:
    networks:
      - haproxy_net
    build:
      tags: 
        - identityserver:1.0.7
      context: .
      dockerfile: IdentityServer/Dockerfile
    ports:
      - "5003:5003"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ./configs/identity:/myapp/cert
      - ../creds:/home/creds
    depends_on:
      - common_image

  passiwebapi:
    networks:
      - haproxy_net
    build:
      tags: 
        - identityserver:1.0.7
      context: .
      dockerfile: passiwebapi/Dockerfile
    ports:
      - "5004:5004"
    env_file:
      - ./configs/variables/dev.env
    volumes:
      - ../creds:/home/creds
    depends_on:
      - common_image



