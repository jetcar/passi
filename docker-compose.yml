version: '3.4'

services:

  database:
    image: 'postgres:13.8'
    container_name: postgres
    networks:
    - dock_net
    env_file:
    - ../passi_config/dev.env
    volumes:
      - type: bind
        source: ../db-data/
        target: /var/lib/postgresql/data/
    restart: always


  pgadmin:
    image: 'dpage/pgadmin4:7.4'
    container_name: pgadmin
    networks:
    - dock_net
    env_file:
    - ../passi_config/dev.env
    restart: always
    depends_on:
    - database
    volumes:
    - ../passi_config/pgadmin/:/etc/pgadmin/:ro
    - ../pgadmin/:/var/lib/pgadmin/:rw

  redis:
    image: 'redis/redis-stack-server:7.0.6-RC5'
    container_name: redis
    networks:
    - dock_net
    env_file:
    - ../passi_config/dev.env
    restart: always
    volumes:
    - ../redis_data/:/data


  haproxy:
    container_name: haproxy
    image: haproxy:2.8.1
    volumes:
      - ../passi_cert:/usr/local/etc/haproxy/cert
      - ./haproxy:/usr/local/etc/haproxy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - dock_net

  webapp:
    build:
      context: .
      dockerfile: WebApp/Dockerfile
    networks:
      - dock_net
    env_file:
    - ../passi_config/dev.env
    volumes:
    - ../creds:/home/creds
    depends_on:
    - database
    restart: always


  identityserver:
    build:
      context: .
      dockerfile: IdentityServer/Dockerfile
    networks:
      - dock_net
    env_file:
    - ../passi_config/dev.env
    volumes:
    - ../creds:/home/creds
    depends_on:
    - database
    - passiwebapi
    restart: always

  passiwebapi:
    build:
      context: .
      dockerfile: passiwebapi/Dockerfile
    networks:
      - dock_net
    depends_on:
    - database
    - redis
    env_file:
    - ../passi_config/dev.env
    volumes:
    - ../creds:/home/creds
    restart: always
    
networks:
  dock_net:
    driver: bridge




