version: '3.4'
services:
  database:
    image: 'postgres:15.5'
    container_name: postgres
    networks:
      - database_net
    env_file:
      - ../passi_config/dev.env
    volumes:
      - type: bind
        source: /mnt/newdisk/db-data3/
        target: /var/lib/postgresql/data/
    restart: always
  porkbun-ddns:
    image: "mietzen/porkbun-ddns:latest"
    container_name: porkbun-ddns
    env_file:
      - ../passi_config/ddclient.env      
    restart: unless-stopped
    networks:
      - haproxy_net
    
  pgadmin:
    image: 'dpage/pgadmin4:8.5'
    container_name: pgadmin
    networks:
      - haproxy_net
      - database_net
    env_file:
      - ../passi_config/dev.env
    restart: always
    depends_on:
      - database
    volumes:
      - ../passi_config/pgadmin/:/etc/pgadmin/:ro #config
      - ../pgadmin/:/var/lib/pgadmin/:rw
  redis:
    image: 'redis/redis-stack-server:7.0.6-RC5'
    container_name: redis
    networks:
      - redis_net
    restart: always
    volumes:
      - ../redis_data/:/data
  haproxy:
    container_name: haproxy
    image: haproxy:3.1.2
    volumes:
      - ../passi_cert:/usr/local/etc/haproxy/cert
      - ./configs/haproxy:/usr/local/etc/haproxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - passiwebapi
      - webapp
      - identityserver
    networks:
      - haproxy_net
  webapp:
    image: jetcar/webapp:1.0.47
    networks:
      - haproxy_net
      - database_net
    env_file:
    - ../passi_config/dev.env
    volumes:
      - ../creds:/home/creds
      - ../passi_identity_cert:/myapp/cert
      - ../.well-known:/myapp/wwwroot/.well-known
    depends_on:
      - database
    restart: always
  identityserver:
    image: jetcar/identityserver:1.0.47
    networks:
      - haproxy_net
      - database_net
      - redis_net
    container_name: identityserver
    env_file:
    - ../passi_config/dev.env
    volumes:
      - ../passi_identity_cert:/myapp/cert
      - ../creds:/home/creds
    depends_on:
      - database
      - passiwebapi
    restart: always
  openidc:
    image: jetcar/openidc:1.0.47
    networks:
      - haproxy_net
      - database_net
      - redis_net
    container_name: openidc
    env_file:
    - ../passi_config/dev.env
    volumes:
      - ../passi_identity_cert:/myapp/cert
      - ../creds:/home/creds
    depends_on:
      - database
      - passiwebapi
    restart: always
  passiwebapi:
    image: jetcar/passiwebapi:1.0.47
    networks:
      - haproxy_net
      - database_net
      - redis_net
    depends_on:
      - database
      - redis
    env_file:
    - ../passi_config/dev.env
    volumes:
      - ../creds:/home/creds
      - ../passi_identity_cert:/myapp/cert
    restart: always
  # Core services
  front:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}nginx:${MAILU_VERSION:-2024.06}
    container_name: front
    restart: always
    env_file:
      - ../passi_config/dev.env
    ports:
      - "25:25"
      - "465:465"
      - "587:587"
      - "110:110"
      - "995:995"
      - "143:143"
      - "993:993"
      - "4190:4190"
      - "8008:8008"
    networks:
      - default
      - haproxy_net
    volumes:
      - ../passi_cert:/certs
      - "/mnt/newdisk/mailu/overrides/nginx:/overrides:ro"
    depends_on:
      - resolver
    dns:
      - 192.168.202.254
  resolver:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}unbound:${MAILU_VERSION:-2024.06}
    env_file:
      - ../passi_config/dev.env
    restart: always
    networks:
      default:
        ipv4_address: 192.168.202.254
        
  admin:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}admin:${MAILU_VERSION:-2024.06}
    container_name: admin
    restart: always
    env_file:
      - ../passi_config/dev.env
    volumes:
      - "/mnt/newdisk/mailu/data:/data"
      - "/mnt/newdisk/mailu/dkim:/dkim"
    networks:
      - default
      - haproxy_net
      - redis_net
    depends_on:
      - redis
      - resolver
    dns:
      - 192.168.202.254
  imap:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}dovecot:${MAILU_VERSION:-2024.06}
    restart: always
    env_file:
      - ../passi_config/dev.env
    volumes:
      - "/mnt/newdisk/mailu/mail:/mail"
      - "/mnt/newdisk/mailu/overrides/dovecot:/overrides:ro"
    networks:
      - haproxy_net
      - default
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.202.254
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip
  smtp:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}postfix:${MAILU_VERSION:-2024.06}
    restart: always
    env_file:
      - ../passi_config/dev.env
    networks:
      - haproxy_net
      - default
    volumes:
      - "/mnt/newdisk/mailu/mailqueue:/queue"
      - "/mnt/newdisk/mailu/overrides/postfix:/overrides:ro"
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.202.254
    deploy:
      mode: replicated
      replicas: 1
      endpoint_mode: vip
      
  oletools:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}oletools:${MAILU_VERSION:-2024.06}
    container_name: oletools
    hostname: oletools
    restart: always
    networks:
      - default
    depends_on:
      - resolver
    dns:
      - 192.168.202.254
  antispam:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}rspamd:${MAILU_VERSION:-2024.06}
    container_name: antispam
    hostname: antispam
    restart: always
    env_file:
      - ../passi_config/dev.env
    volumes:
      - "/mnt/newdisk/mailu/filter:/var/lib/rspamd"
      - "/mnt/newdisk/mailu/overrides/rspamd:/overrides:ro"
    networks:
      - redis_net
      - default
    depends_on:
      - front
      - redis
      - oletools
      - resolver
    dns:
      - 192.168.202.254
  webmail:
    image: ${DOCKER_ORG:-ghcr.io/heviat}/${DOCKER_PREFIX:-}webmail:${MAILU_VERSION:-2024.06}
    container_name: webmail
    restart: always
    env_file:
      - ../passi_config/dev.env
    volumes:
      - "/mailu/webmail:/data"
      - "/mailu/overrides/roundcube:/overrides:ro"
    networks:
      - default
    depends_on:
      - front
    dns:
      - 192.168.202.254
  wireguard:
    image: lscr.io/linuxserver/wireguard
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - SERVERURL=passi.cloud #optional
      - SERVERPORT=51820 #optional
      - PEERS=4 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=192.168.0.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
    volumes:
      - ../wireguard/config:/config
      - /lib/modules:/lib/modules
    networks:
      - haproxy_net
      - database_net
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
networks:
  haproxy_net:
    driver: bridge
  database_net:
    driver: bridge
    internal: true
    attachable: false
    enable_ipv6: false
  redis_net:
    driver: bridge
    internal: true
    attachable: false
    enable_ipv6: false
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.202.0/24
